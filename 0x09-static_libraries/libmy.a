!<arch>

int _putchar(char c)
{
return (write(1, &c, 1));
}

int _islower(int c)
{
int i = 'a';

for (i = 'a'; i <= 'z'; i++)
{
/* refer int c*/
if (c == i)
{
return (1);
}
}
return (0);
}

int _isalpha(int c)
{
	if (c >= 'a' && c <= 'z')
{
return (1);
}
else if (c >= 'A' && c <= 'Z')
{
return (1);
}
else
{
return (0);
}
}

int _abs(int n)
{
if (n > 0)
{
return (n);
}
else if (n < 0)
{
return (-n);
}
else
{
return (n);
}
}


int _isupper(int c)
{
if (c >= 65 && c <= 90)
{
return (1);
}
return (0);
}

int _isdigit(int c)
{
return (c >= 48 && c <= 57);
}

int _strlen(char *s)
{
int length = 0;

while (s[length])
length++;
return (length);
}

void _puts(char *str)
{
int i = 0;

while (str[i])
{
_putchar(str[i]);
i++;
}
_putchar('\n');
}

char *_strncpy(char *dest, char *src, int n)
{
int index = 0, src_len = 0;

while (src[index++])
src_len++;

for (index = 0; src[index] && index < n; index++)
dest[index] = src[index];

for (index = src_len; index < n; index++)
dest[index] = '\0';

return (dest);
}

!<arch>
